/* A pangram is a string that contains every letter of the alphabet. Given a sentence determine whether it is a pangram in the English alphabet. Ignore case. Return either pangram or not pangram as appropriate.

*/

import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.function.*;
import java.util.regex.*;
import java.util.stream.*;
import static java.util.stream.Collectors.joining;
import static java.util.stream.Collectors.toList;

class Result {

    /*
     * Complete the 'pangrams' function below.
     *
     * The function is expected to return a STRING.
     * The function accepts STRING s as parameter.
     */

    public static String pangrams(String s) {
        
        int[] a = new int[26];
        Arrays.fill(a, 0);
        
        for(int i=0; i < s.length(); i++){
            char c = s.charAt(i);
            //System.out.println("Char: "+c);
           if (( c >= 'a' && c <= 'z') ||
           (c >= 'A' && c <='Z')){
               int index  = ((int) Character.toLowerCase(c) - 97);
               //System.out.println("index: "+ index);
               a[index] = 1;
           }
        }
        
        for(int i= 0; i< 26; i++){
            if (a[i] == 0){
                return "not pangram";
            }
        }
        
        return "pangram";
    }

}

public class Solution {
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        String s = bufferedReader.readLine();

        String result = Result.pangrams(s);

        bufferedWriter.write(result);
        bufferedWriter.newLine();

        bufferedReader.close();
        bufferedWriter.close();
    }
}

